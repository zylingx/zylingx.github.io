<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[变量与常量]]></title>
    <url>%2F2018%2F06%2F08%2F%E5%8F%98%E9%87%8F%E4%B8%8E%E5%B8%B8%E9%87%8F%2F</url>
    <content type="text"><![CDATA[变量 变量就是值能够随时发生改变的量。 也是一个存储数据的容器，变量可以是整数或浮点数，可以是字符串，还可以是任意数据类型。 静态语言与动态语言的声明方式差异在Python中，等号=是赋值语句，可以把任意数据类型赋值给变量，同一个变量可以反复赋值，而且可以是不同类型的变量，例如：(#在python中表示注释) a = 123 # a是整数 a = ‘ABC’ # a变为字符串这种变量本身类型不固定的语言称之为动态语言，与之对应的是静态语言。 静态语言在定义变量时必须指定变量类型，如果赋值的时候类型不匹配，就会报错。例如Java是静态语言，赋值语句如下（// 在Java中表示注释）： int a = 123; // a是整数类型变量 a = &quot;ABC&quot;; // 错误：不能把字符串赋给整型变量 和静态语言相比，动态语言更灵活，就是这个原因。 不要把赋值语句的等号等同于数学的等号比如下面的代码： x = 10 x = x + 2 如果从数学上理解x = x+2那无论如何是不成立的，在程序中，赋值语句先计算右侧的表达式x + 2，得到结果12，再赋给变量x。由于x之前的值是10，重新赋值后，x的值变成12。 变量在计算机内存中的表示（重要）当我们写：a = ‘ABC’时，Python解释器干了两件事情： 1.在内存中创建了一个’ABC’的字符串； 2在内存中创建了一个名为a的变量，并把它指向’ABC’。 当然我们也可以把一个变量a赋值给另一个变量b，这个操作实际上是把变量b指向了变量a指向的数据，例如下面的代码： a = &apos;ABC&apos; b = a a = &apos;XYZ&apos; print(b) 最后一行打印出变量b的内容到底是’ABC’呢还是’XYZ’？如果从数学意义上理解，就会错误地得出b和a相同，也应该是’XYZ’，但实际上b的值是’ABC’，让我们一行一行地执行代码，就可以看到到底发生了什么事。1：执行a = ‘ABC’，解释器创建了字符串’ABC’和变量a，并把a指向’ABC’：(图一) 2：执行b = a，解释器创建了变量b，并把b指向a指向的字符串’ABC’：(图二) 3：执行a =’XYZ’，解释器创建了字符串’XYZ’，并把a的指向改为’XYZ’，但b并没有更改所以，最后打印变量b的结果自然是’ABC’了。（图三） 多个变量赋值Python允许你同时为多个变量赋值。例如： a = b = c = 1 以上实例，创建一个整型对象，值为1，三个变量被分配到相同的内存空间上。 您也可以为多个对象指定多个变量。例如： a, b, c = 1, 2, &quot;runoob&quot; 以上实例，两个整型对象 1 和 2 的分配给变量 a和b，字符串对象”runoob”分配给变量 c。 标识符的命名(变量的命名) –标识符由字母、数字和下划线组成。 –标识符命名不能用数字开头。 –标识符对大小写敏感。 Andy 不等于 andy有效标识符名称的例子有i、__my_name、name_23和a1b2_c3。无效标识符名称的例子有2things、this is spaced out和my-name。 python保留字 保留字即关键字，我们不能把它们用作任何标识符名称。Python 的标准库提供了一个 keyword 模块，可以输出当前版本的所有关键字： 常量 所谓常量就是不能变的变量，比如常用的数学常数π就是一个常量。在Python中，通常用全部大写的变量名表示常量如： PI = 3.14159265359 但事实上PI仍然是一个变量，Python根本没有任何机制保证PI不会被改变，所以，用全部大写的变量名表示常量只是一个习惯上的用法，如果你一定要改变变量PI的值，也没人能拦住你。]]></content>
      <categories>
        <category>python基础编程</category>
      </categories>
      <tags>
        <tag>python基础编程</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[输入与输出]]></title>
    <url>%2F2018%2F06%2F07%2F%E8%BE%93%E5%85%A5%E4%B8%8E%E8%BE%93%E5%87%BA%2F</url>
    <content type="text"><![CDATA[#输出#print(value,…,sep=” “,end=”\n”,file=sys.stdout,flush=False) 用print()在括号中加上字符串，就可以向屏幕上输出指定的文字。print()函数也接受多个字符串，用逗号“,”隔开，就可以连成一串输出：&gt;&gt;&gt;print(&#39;hello&#39;, &#39; world&#39;)hello world sep=””可以设置多个字符串之间的分隔符，就是将逗号替换为双引号中的内容end =””可以设置结尾的字符，可以将结尾的换行符换成双引号中的内容&gt;&gt;&gt;print(&quot;hello&quot;,&quot;world&quot;,sep = &quot;A&quot;,end = &quot;TT&quot;)helloAworldTT file 表示输出的目标,默认是标准的输出(控制台),还可以是一个可写入的文件句柄flush 表示立即输出的意思,需要输出的内容, 是先存放在缓冲区, 然后再输出到目标flush,就代表是否刷新缓冲区,让缓冲区的内容,立即输出到目标,默认False 加号是将两个字符串连接到一起。乘号是将字符串重复打印&gt;&gt;&gt; print(“Hello”+” World”)Hello World&gt;&gt;&gt; print(“Hello” * 8)HelloHelloHelloHelloHelloHelloHelloHello &gt;&gt;&gt; print(“Hello World” + 8)error,字符串不能做加法运算 输入格式：result = input(‘提示信息’)功能： ==会等待用户输入内容，直到用户按下Enter ==会将用户输入的内容当做”字符串”，传递给接收的变量附：如想把用户输入的数据当成代码处理请参考eval()函数。 练习1：请利用print()输出1024 * 768 = xxx： 2：提示用户并让用户输入今天的日期时间]]></content>
      <categories>
        <category>python基础编程</category>
      </categories>
      <tags>
        <tag>python基础编程</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Python的安装与使用]]></title>
    <url>%2F2018%2F06%2F06%2FPython%E7%9A%84%E5%AE%89%E8%A3%85%E5%92%8C%E4%BD%BF%E7%94%A8%2F</url>
    <content type="text"><![CDATA[Python的文件你可以用任意文本编辑器建立源代码，但是绝大多数Python文件为了统一都是以.py命名的。 在Windows上安装Python 首先，根据你的Windows版本（64位还是32位）从Python的官方网站下载Python．然后，运行下载的EXE安装包 我们可以通过Python官方网站下载获得Python。因为Python是跨平台的，在Windows上写Python程序，放到Linux上也是能够运行的。特别要注意勾上Add Python 3.5 to PATH，然后点“Install Now”即可完成安装。注：这是当时作者安装时的版本，如要安装新的版本请按类似操作进行选择附：作者建议安装32位的版本，因为64位的python编写的程序无法在32位机上跑程序， 使用IDLE来帮助学习Python因为这个对新手非常友好 –IDLE是安装Python时就同时安装好的，在windows环境下，你可以在开始菜单中找到. –第一次启动IDLE时，会显示“三个大于号”提示符(&gt;&gt;&gt;)，可以在这里输入代码。shell在得到你的代码后会立即执行，并在屏幕上显示生成的结果。与交互模式下的运行方式一样： 使用文本编辑器选择IDLE里的新建选项打开我们的Python自带的文本编辑器。 请注意，绝对不能用Word和Windows自带的记事本。Word保存的不是纯文本文件，而记事本会自作聪明地在文件开始的地方加上几个特殊字符（UTF-8 BOM），结果会导致程序运行出现莫名其妙的错误。]]></content>
      <categories>
        <category>python基础编程</category>
      </categories>
      <tags>
        <tag>python基础编程</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Python简介(了解)]]></title>
    <url>%2F2018%2F06%2F05%2FPython%E7%AE%80%E4%BB%8B(%E4%BA%86%E8%A7%A3)%2F</url>
    <content type="text"><![CDATA[Python简介（了解）Python是一种面向对象的解释型计算机程序设计语言，由荷兰人Guido van Rossum于1989年发明，第一个公开发行版发行1991年。Python是纯粹的自由软件， 源代码和解释器CPython遵循 GPL协议。Python语法简洁清晰，特色之一是强制用空白符(white space)作为语句缩进。 排行：7月20日，IEEE发布2017年编程语言排行榜：Python高居首位。 设计定位:Python的设计哲学是“优雅”、“明确”、“简单”。“总是有多种方法来做同一件事”通常是难以忍受的。Python的哲学是“用一种方法，最好是只有一种方法来做一件事”。由于这种设计观念的差异，Python源代码通常被认为比Perl具备更好的可读性，并且能够支撑大规模的软件开发。 Python更新:开发人员尽量避开不成熟或者不重要的优化。一些针对非重要部位的加快运行速度的补丁通常不会被合并到Python内。所以很多人认为Python很慢。不过，根据二八定律，大多数程序对速度要求不高。在某些对运行速度要求很高的情况，Python设计师倾向于使用JIT技术，或者用使用C/C++语言改写这部分程序。可用的JIT技术是PyPy。 执行:Python在执行时，首先会将.py文件中的源代码编译成Python的字节码，然后再由 Python虚拟机 来执行这些编译好的字节码。这种机制的基本思想跟Java，.NET是一致的。然而不同的是，Python的虚拟机是一种更高级的虚拟机。这里的高级并不是通常意义上的高级，不是说比Java或.NET的功能更强大，而是和Java 或.NET相比，Python的虚拟机距离真实机器的距离更远。或者可以认为Python的虚拟机是一种抽象层次更高的虚拟机。基于C的Python编译出的字节码文件，通常是.pyc格式。除此之外，Python还可以以交互模式运行，比如主流操作系统Unix/Linux、Mac、Windows都可以直接在命令模式下直接运行Python交互环境。直接下达操作指令即可实现交互操作。 优点简单：Python是一种代表简单主义思想的语言。阅读一个良好的Python程序就感觉像是在读英语一样。它使你能够专注于解决问题而不是去搞明白语言本身。 免费、开源：使用者可以自由地发布这个软件的拷贝、阅读它的源代码、对它做改动、把它的一部分用于新的自由软件中。可移植性：这些平台包括Linux、Windows、FreeBSD、Macintosh、Solaris、OS/2、Amiga、AROS、AS/400、BeOS、OS/390、z/OS、PalmOS、QNX、VMS、Psion、Acom RISC OS、VxWorks、PlayStation、Sharp Zaurus、Windows CE、PocketPC、Symbian以及Google基于linux开发的android平台。可扩展性：如果需要一段关键代码运行得更快或者希望某些算法不公开，可以部分程序用C或C++编写，然后在Python程序中使用它们。规范的代码：Python采用强制缩进的方式使得代码具有较好可读性。而Python语言写的程序不需要编译成二进制代码。 缺点⑴运行速度。但是如果有速度要求的话，可以用C/C++改写关键部分吧。 ⑵python的开源性使Python语言不能加密。关于不能加密这点，作者想说，在这个时代，大家的时间辣么宝贵，才有那闲功夫去破解你的软件，洗洗睡吧 ⑶构架选择太多。不过这也从另一个侧面说明，python比较优秀，吸引的人才多，项目也多。 Python应用场景Web应用开发 Python经常被用于Web开发。比如，通过mod_wsgi模块，Apache可以运行用Python编写的Web程序。Python定义了WSGI标准应用接口来协调Http服务器与基于Python的Web程序之间的通信。一些Web框架，如Django,TurboGears,web2py,Zope等，可以让程序员轻松地开发和管理复杂的Web程序。 操作系统管理、服务器运维的自动化脚本 在很多操作系统里，Python是标准的系统组件。 大多数Linux发行版以及NetBSD、OpenBSD和Mac OS X都集成了Python，可以在终端下直接运行Python。有一些Linux发行版的安装器使用Python语言编写，比如Ubuntu的Ubiquity安装器,Red Hat Linux和Fedora的Anaconda安装器。Gentoo Linux使用Python来编写它的Portage包管理系统。Python标准库包含了多个调用操作系统功能的库。通过pywin32这个第三方软件 包，Python能够访问Windows的COM服务及其它Windows API。使用IronPython，Python程序能够直接调用.Net Framework。一般说来，Python编写的系统管理脚本在可读性、性能、代码重用度、扩展性几方面都优于普通的shell脚本。 科学计算 NumPy,SciPy,Matplotlib可以让Python程序员编写科学计算程序。 桌面软件 PyQt、PySide、wxPython、PyGTK是Python快速开发桌面应用程序的利器。 服务器软件（网络软件） Python对于各种网络协议的支持很完善，因此经常被用于编写服务器软件、网络爬虫。第三方库Twisted支持异步网络编程和多数标准的网络协议(包含客户端和服务器)，并且提供了多种工具，被广泛用于编写高性能的服务器软件。 游戏 很多游戏使用C++编写图形显示等高性能模块，而使用Python或者Lua编写游戏的逻辑、服务器。相较于Python，Lua的功能更简单、体积更小；而Python则支持更多的特性和数据类型。 构思实现，产品早期原型和迭代 YouTube、Google、Yahoo!、NASA都在内部大量地使用Python。]]></content>
      <categories>
        <category>python基础编程</category>
      </categories>
      <tags>
        <tag>python基础编程</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[我的第一篇博客]]></title>
    <url>%2F2018%2F05%2F19%2F%E6%88%91%E7%9A%84%E7%AC%AC%E4%B8%80%E7%AF%87%E5%8D%9A%E5%AE%A2%2F</url>
    <content type="text"><![CDATA[从上大学开始就想着有一个属于自己的个人网站，可以在上面记录下自己的学习历程。到今天，这才实现了我这个想法。 想起了大一时的一腔热血，一头扎进了各种快速建站，结果在服务器的价格与域名备案上退缩了，想起来也是好笑。不管怎样，今天，是一个开心的日子。 每一个不曾起舞的日子都是对生命的辜负 加油，越努力，越幸运！]]></content>
      <categories>
        <category>日记</category>
      </categories>
      <tags>
        <tag>日记</tag>
      </tags>
  </entry>
</search>
