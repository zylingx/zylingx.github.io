<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[第一章:绪论]]></title>
    <url>%2F2018%2F06%2F04%2F%E7%AE%97%E6%B3%95-%E7%AC%AC%E4%B8%80%E7%AB%A0_%E7%BB%AA%E8%AE%BA%2F</url>
    <content type="text"><![CDATA[什么是算法？解决特定问题的方法 为何要学习算法？&emsp;&emsp;从上面知道了算法就是解决特定问题的方法，而我们用的编程语言是用来解决问题的工具，工具有了，如何去使用工具才是我们应该要去学习的。如果说编程语言是利器，那么算法就是灵魂。算法很难，但也需要我们去学习。 什么是数据结构？数据结构是计算机存储、组织数据的方式。通常情况下，精心选择的数据结构可以带来更高的运行或者存储效率。 算法的特性：* 有限的 * 每一步是明确的(不能有歧义) * 至少有一个输出 什么是好的算法？* 分析指标： * 空间复杂度S(n)：程序执行时占用存储单元的长度 * 时间复杂度T(n)：程序执行时耗费时间的长度 注：这两个指标与要处理的数据规模是相关的。 * 分析算法关注两种复杂度 * 最坏情况复杂度Tworst(n) * 平均情况复杂度Tavg(n) 不同复杂度的函数，在不同的数据规模下的增长趋势。 算法时间复杂度的计算 总结：若两段算法分别有复杂度T1(n) = O(f1(n)) 和 T2(n) = O(f2(n))，则: * 两个算法拼在一起时，等于两段的和 T1(n) + T2(n) * 两个算法嵌套时，等于两段的积 T1(n) * T2(n) 若T(n)是关于n的k阶多项式时，真正起作用的是T(n) = O(n^k) ，只需要最高次项， 次高次项及以下被忽略(具体原因自行思考或百度) 一个for循环的时间复杂度等于循环次数 乘以 循环体代码的复杂度 if–else结构的复杂度取决于两个分支中复杂度最高的那个 案例一：写程序,计算给定多项式在定点x处的值第一种写法上面写法不推荐 第二种写法秦九韶算法是中国南宋时期的数学家秦九韶提出的一种多项式简化算法。在西方被称作霍纳算法。是一种将一元n次多项式的求值问题转化为n个一次式的算法。其大大简化了计算过程，即使在现代，利用计算机解决多项式的求值问题时，霍纳规则依然是最优的算法规则。具体计算过程自行百度。 f(x) = A0 + X (A1 + X( … ( An - 1 + X( An ) ) ) ) 自行验证第一种与第二种时间复杂度，运行效率自行测试 案例二：给定N个整数的序列{A1,A2,……,An}，求下面函数的最大值。 算法一： 算法二： 算法三：分治思想 注：代码比较复杂，这里不展示，过程就是利用分治思想解决这个问题(分治思想后面会说) 算法四：在线处理“在线”指每输入一个数据进行即时处理，在任何一个地方终止，算法都能给出正解。]]></content>
      <categories>
        <category>算法基础</category>
      </categories>
      <tags>
        <tag>算法基础</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[第一讲]]></title>
    <url>%2F2018%2F06%2F04%2F%E6%95%B0%E6%8D%AE%E5%BA%93_%E7%AC%AC%E4%B8%80%E7%AB%A0_%E6%A6%82%E8%BF%B0%2F</url>
    <content type="text"><![CDATA[为什么要学习数据库？&emsp;&emsp;在这个信息化的时代，每时每刻都会有大量的数据产生，只有科学地处理和利用这些数据，才能发现数据本身的价值，而数据库的作用，就是科学而高效的存储数据和利用数据。 基本概念* 表：记录的组合 表示同一类事物的组合 * 数据库：有组织的、可共享的、相关数据的集合 * 数据库管理系统：管理数据库的软件系统 数据库系统的构成 数据库库管理系统的功能* 数据库定义： 定义数据库中Table的名称、格式 * 数据库操纵： 对表进行增加/删除/更新/查询 * 数据库控制： 设置数据库的访问权限 * 数据库维护： 转储/恢复/重组等 SQL语句又叫结构化的数据库语言，许多常用的、实用的功能可以只用一条语句就可以实现，矮小精悍。常用的三个模块： * 数据定义语言(DDL):定义数据格式 * 数据操纵语言(DML):对数据操作 * 数据控制语言(DCL):对数据进行权限控制 表的常用术语记录(行/元组)：事物特征的组合，可以描述一个具体的事物 字段(列/属性)：某一个事物的一个特征 冗余：当出现两个姓名，性别、年龄都相同的张三时，就无法辨别，我们管这种现象叫做冗余 主键：能唯一标识信息的事物&emsp;&emsp;当出现冗余，这两信息就无法辨别，这里就需要设置一个唯一的标识信息。上面表格的学号是主键。这个能唯一标识信息的事物叫做主键。 外键：一个执行另个一个表的指针当在上面表格上添加上班级，教学楼属性后。考虑下能不能把学生信息和班级信息放到一起？答案是不能！因为从前三名可以看出，如果几个人都属于一个班级，那么班级名，所属二级学院、教学楼地址信息重复了三次，会造成信息冗余。 通过将信息分开的方法，的确减少的信息冗余，但是如何建立关系呢？这时我们可以通过班级编号建立关系，此时的“班级编号”就是”学生信息表”的外键。（注意在两个表分开写后，我们为“学生信息”增加一个主键“班级编号”当然如果不增加的话，班级名称同样可以成为“班级信息”表的主键） 通过学生信息表中班级编号这一外键，可以去班级信息表中找到对应的班级信息。]]></content>
      <categories>
        <category>数据库</category>
      </categories>
      <tags>
        <tag>数据库</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[前言]]></title>
    <url>%2F2018%2F05%2F21%2Fpython%E5%9F%BA%E7%A1%80%E6%95%99%E7%A8%8B_%E5%89%8D%E8%A8%80%2F</url>
    <content type="text"><![CDATA[在开始学习这门语言之前，我首先要明确几件事&emsp;&emsp;&emsp;&emsp; 1.为什么要学习Python？&emsp;&emsp;&emsp;&emsp; 2.怎样来学习Python？ 我为什么要学习Python？&emsp;&emsp;对于这个问题，我个人一开始的出发点就是因为三个因素：&emsp;&emsp;&emsp;&emsp;易学、就业机会多、热门语言 &emsp;&emsp;先说说易学，相信大家都有听说过都听说过C语言和Java这门语言，如果你先用C写一个程序或者用java语言来写一个程序,再用Python语言来写一个程序，相信你就会明白什么是易学了。因为用python语言来写一个程序，实在是一个令人心情舒畅的过程。这里不是在贬低c语言和Java语言,每种语言都有着各自的优缺点，但是如果让我来做为一个刚入门的新手，去评价去选择一门语言做为编程方面入门的话，我一定会选择Python，因为python的语法规则非常接近于自然语言，代码语句较少，书写简单，适合新手去学习。下面上代码实例说明。 c语言写hello world12345#include&lt;stdio&gt;int main()&#123; printf("hello world!"); return;&#125; java写hello world12345public class Hello &#123; public static void main(String[] args) &#123; System.out.println("hello world!"); &#125;&#125; python 写hello world1print("hello world!") &emsp;&emsp; 就业机会多：在进入这篇博客之前，如果你细心观察了的话，就会发现我提出的一个问题：Python为什么这么火？实际上这是一个非常好的问题。得益很很多因素，最重要的因素是越来越多的大数据和云计算解决方案。它被用于机器学习、人工智能系统和各种现代技术中。也是因为它能够非常简便的分析和处理数据。有兴趣的童鞋可以参考这篇文章&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;万能的Python背后：这6大原因让它爆火&emsp;&emsp;如果前往一些知名网站，可以看到许多招聘企业需要这方面的人才。java需求范围很大，但这几年让各种培训、院校堆的人挤人。对于Python来说，这门语言的需要人才市场还远远没有饱和，许多公司都缺少数据分析这方面的人才 &emsp;&emsp; 热门语言：达到什么样的标准才叫热门语言呢，当然是从该语言的使用人数、搜索引擎中该词条的搜索次数和培训机构的多少来看，这我就直接链出TIOBE编程语言排行供大家参考好了 怎样来学习Python？&emsp;&emsp;这方面我也在摸索，大概方向已经确定好了，基础系列的目标主要是解决Python的基础语法的学习，后续再学习Python的核心编程、网络编程、爬虫等，等学完前面这些后再想后面的怎么学]]></content>
      <categories>
        <category>python基础编程</category>
      </categories>
      <tags>
        <tag>python基础编程</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[我的第一篇博客]]></title>
    <url>%2F2018%2F05%2F19%2F%E6%88%91%E7%9A%84%E7%AC%AC%E4%B8%80%E7%AF%87%E5%8D%9A%E5%AE%A2%2F</url>
    <content type="text"><![CDATA[&emsp;&emsp;从上大学开始就想着有一个属于自己的个人网站，可以在上面记录下自己的学习历程。到今天，这才实现了我这个想法。 &emsp;&emsp;想起了大一时的一腔热血，一头扎进了各种快速建站，结果在服务器的价格与域名备案上退缩了，想起来也是好笑。不管怎样，今天，是一个开心的日子。 &emsp;&emsp;&emsp;&emsp;每一个不曾起舞的日子都是对生命的辜负 &emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;加油，越努力，越幸运！]]></content>
      <categories>
        <category>日记</category>
      </categories>
      <tags>
        <tag>日记</tag>
      </tags>
  </entry>
</search>
